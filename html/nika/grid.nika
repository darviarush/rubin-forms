/* функции для параметров */
%exists = function(v) { if(r=CInit.param.css.match(new RegExp("(?:^|\\d)"+v+"(\\d+|(\\d+)?\\.\\d+)"))) return parseInt(r[1]) }
%get = function(v, def) { return (r=exists(v))!=null? r: def }

/* параметры */
%br = get("b", 1)
%pa = get("p", 4)
%ma = get("p", 4)
%box = get("p", 0.4)
%inx = get("in", 1)


/* вендорные префиксы */
%$vendor = CNavigator.vendor
%$style = document.createElement('div').style
%if(!'animation' in $style) $keyframes_vendor = $vendor
%test(prop) {%if !(prop in $style) {%{$vendor}}%{prop}}

%-vendor-box-sizing {%{test('box-sizing')}}
%-vendor-box-shadow {%{test('box-shadow')}}
%-vendor-border-radius {%{test('border-radius')}}
%-vendor-transform {%{test('transform')}}
%-vendor-transition {%{test('transition')}}
%-vendor-opacity {%{test('opacity')}}
%-vendor-animation {%{test('animation')}}



%background-image(...) {background-image: %{arg}}
%-vendor-background-image(...) {background-image: %{arg.replace(/(\w+-gradient\()/g, $vendor+'$1')}}
%$style.backgroundImage = 'linear-gradient(to bottom, red, blue)'
%if($style.backgroundImage) VendorBackgroundImage = backgroundImage

/* *filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#febf01', endColorstr='#febf01',GradientType=0 ); /* IE6-8 */

/* инициализация */


html {margin:0;padding:0;border:0}
body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, dialog, figure, footer, header, hgroup, nav, section {margin:0;padding:0;border:0;vertical-align:middle;}
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, dialog, main {display:block;}
table {border-collapse:separate;border-spacing:0;}
caption, th, td {text-align:center;font-weight:normal;float:none !important;padding: %{pa}px}
table, th, td {vertical-align:middle;}
blockquote:before, blockquote:after, q:before, q:after {content:''}
blockquote, q {quotes:"" "";}
img {border:none;}
:focus {outline:0;}

body { 
font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
font-size: 14px;
line-height: 1.42857143;
color: #333;
background-color: #fff;
overflow: auto;
}

input, button, select, textarea { font-family: inherit; font-size: inherit; line-height: inherit; overflow: hidden; border:solid %{br}px #E7E7E7!important;  }
input, button, textarea { padding: %{pa}px }
select {height: %{20+2*pa+2*br}px}
input:hover, button:hover, select:hover, textarea:hover { border-color: orange }
a { color: #428bca; text-decoration: none; }
a:hover, a:focus { color: #2a6496; text-decoration: underline; }
a:focus { outline: thin dotted; outline: 5px auto -webkit-focus-ring-color; outline-offset: -2px; }

h1, h2, h3, h4, h5, h6 { border-width: 10pt 0 5pt 0; border-color: transparent; border-style: solid; clear:both }

html,body{ width:100%; height:100% }

* { padding: 0; margin: 0; box-sizing: border-box; clear: both; vertical-align:middle; }
div:after {clear:both; content: ""; display: block;}

%inline-block {display: -moz-inline-stack; display: inline-block; *display: inline; *zoom: 1}


/* константы цвета */

%dim = "#778899"
%ldim = "#E7E7E7"
%green = "#3CB371"
%lgreen = "#F0FFF0"
%orange = "#FFA500"
%lorange = "#FFF8DC"
%violet = "#9370DB"
%lviolet = "lavender"
%blue = "#4169E1"
%lblue = "AliceBlue"
%red = "#CD5C5C"
%lred = "#FFE4E1"

%sizes = {tiny: 1, small: 1, minor: 1, normal: 1, major: 1, big: 1, huge: 1, divine: 1}
%actions = {dim:'default', green:'info', orange:'warn', violet:'primary', blue:'sucess', red:'alert'}
%dark = {dim:dim, green:green, orange:orange, violet:violet, blue:blue, red:red}
%light = {dim:ldim, green:lgreen, orange:lorange, violet:lviolet, blue:lblue, red:lred}
%colors = {}
%for name, color of dark {
	%colors[name] = color; colors[name+'-light'] = light[name]
}


/* кнопки - 1 */
.btn {
%{inlineBlock};
background-repeat: repeat-x;
padding: %{pa}px %{pa*2}px;
text-align: center;
background-color: %{blue};
border: solid %{br}px %{blue};
border-radius: 1em;
box-shadow: 1px 1px 1px #778899;
color: white !important;
}
.btn:link { text-decoration:none }
.btn:active { transform: translate(1px, 1px); box-shadow: none; }
.btn:visited { }

.flat {cursor:pointer; opacity: 0.7; transition: opacity 0.2s}
.flat:hover {opacity: 1}
.flat:active {opacity: 0.5}

/* сеть */
.in%{inx}{ margin: 0 auto !important; min-height: 100% }

%blocks = ["h1", "h2", "h3", "h4", "h5", "h6", "p"]

%for row in ["in1", "in2", "in3", "dir", "row"] {%for p in blocks {.%{row} > %{p}, }}
.par { border: solid %{br}px transparent; padding: %{pa}px; margin: 0 %{ma}px %{ma}px 0; clear: both }

%float { float:left; clear:none; position:relative }

/*568 [550, 500, 450] */
%widths = [[750, 650, 550], [970, 770, 570], [1170, 970, 770]]
%display = [768, 992, 1200]
%suffixes = ["s", "w", "m", "l"]

%grid(rem, suffix) {
	%join(arg) {%if i===1{.%{arg+j}, }.%{arg+t}}	
	%fix = suffix === 'w'? '': '-'+suffix
	%lfix = suffix === 'w'? '': suffix
	%height = CRoot.viewHeight()
	%for j in 1..rem {
		%for i in 1..j {
			%k = i * 100 / j
			%h = i * height / j
			%t = i+"_"+j
			%{join(suffix)} { width: %{k}% }
			%{join("h"+lfix)} { height: %{h}px }
			%{join("ph"+lfix)} { height: %{k}% }
			%{join("offset"+fix)} { margin-left: %{k}% }
			%{join("push"+fix)} { left: -%{k}% }
			%{join("pull"+fix)} { left: %{k}% }
		}
	}
}

%addtogrid(rem, classes, styles) {
	%names = []
	%for suffix in suffixes {
		%fix = suffix === 'w'? '': '-'+suffix
		%for j in 1..rem {
			%for i in 1..j {
				%t = i+"_"+j
				%for cls in classes {
					%if(cls === '') fix = suffix
					%names.push([".", cls, fix, t].join("")); if(i===1) names.push([".", cls, fix, j].join(""))
				}
			}
		}
	}
	%{names.join(", ")} {%{styles}}
}

%showgrid(rem, width) {
	%col = width / rem
	.showgrid%{rem} {
		background-image: linear-gradient(transparent 1.4em, %{dim} 1.4em),
		linear-gradient(90deg,
			%{lblue} 0px,
			%{lblue} %{ma}px,
			%{dim} %{ma}px,
			%{dim} %{ma+br}px,
			%{lred} %{ma+br}px,
			%{lred} %{ma+br+pa}px,
			transparent %{ma+br+pa}px,
			transparent %{col-(ma+br+pa)}px,
			%{lblue} %{col-(ma+br+pa)}px,
			%{lblue} %{col-(ma+br)}px,
			%{dim} %{col-(ma+br)}px,
			%{dim} %{col-ma}px,
			%{lred} %{col-ma}px
			);
		background-size: %{col}px 1.42857143em;
		background-repeat: repeat;
	}
}

/**
1. Сформировать сеть для данного типа экрана с media, если есть
2. При ресайзе окна определить - находимся ли мы в том же типе экрана что и до этого, если нет:
	а) media - если ещё не формировали, то сформировать в новом <style />
	б) !media - перезаписать новым
*/


%if $rem = exists('w') {
	%{addtogrid($rem, [""], float)}
	%{grid($rem, suffixes[0])}
}



%for u, n in display {
	%width = widths[n][inx-1]
	%Suffix = suffixes[n+1]
	@media (min-width: %{display[n]}px) {
	
		.in%{inx} {width: %{width}px}
		
		%for suffix in suffixes {%if suffix !== Suffix {.only-%{suffix}, }}
		.no-%{Suffix} {display:none}

		%if $rem {
			%{grid($rem, Suffix)}
		}

	}	
}


.dir {margin-right:0; margin-bottom:0; padding:0; border-width: 0}
.row {margin: -%{pa+br}px }


/* сброс */
.w0 {width: auto}
.push0 { left: auto }
.pull0 { right: auto }
.offset0 { margin-left: auto }
.top0 { margin-top: auto }

/* цвета */
%for name, color of dark {
	.%{name}s > div { background-color: %{color}; color: %{light[name]} }
	.%{name}s-light > div { background-color: %{light[name]}; color: #555; }
}


%for name, color of dark {
	.%{name}, div.%{name} { background-color: %{color}; color: %{light[name]} }
	.%{name}-light, div.%{name}-light { background-color: %{light[name]}; color: #555}
	.%{name}-header, div.%{name}-header { color: %{color}; font-weight: 700; background-color: %{light[name]} }
	.%{name}-text, div.%{name}-text { background-color: %{light[name]}; color: %{color}; }
}

/* границы */
%for name, color of colors {
	.%{name}s-line > div { border: solid %{br}px %{color} }
	.%{name}s-line-h > div { border-left: solid %{br}px %{color}; border-right: solid %{br}px %{color} }
	.%{name}s-line-v > div { border-top: solid %{br}px %{color}; border-bottom: solid %{br}px %{color} }
	.%{name}s-line-l > div { border-left: solid %{br}px %{color} }
	.%{name}s-line-r > div { border-right: solid %{br}px %{color} }
	.%{name}s-line-b > div { border-bottom: solid %{br}px %{color} }
	.%{name}s-line-t > div { border-top: solid %{br}px %{color} }
}

%for name, color of colors {
	.%{name}-line, div.%{name}-line { border: solid %{br}px %{color} }
	.%{name}-line-h, div.%{name}-line-h { border-left: solid %{br}px %{color}; border-right: solid %{br}px %{color} }
	.%{name}-line-v, div.%{name}-line-v { border-top: solid %{br}px %{color}; border-bottom: solid %{br}px %{color} }
	.%{name}-line-l, div.%{name}-line-l { border-left: solid %{br}px %{color} }
	.%{name}-line-r, div.%{name}-line-r { border-right: solid %{br}px %{color} }
	.%{name}-line-b, div.%{name}-line-b { border-bottom: solid %{br}px %{color} }
	.%{name}-line-t, div.%{name}-line-t { border-top: solid %{br}px %{color} }
}

/* бокс */
.box { padding: %{box}em; margin: %{box}em; border-radius: %{box*2}em }
.box > div { padding: %{box}em }
.box > div > input,  .box > div > select,  .box > div > textarea, .box > div > button, .box > div > .btn { width: 100% }

/* отступы */
.pa div, .p { padding: 0.2em }


/* центрирование */
.l { text-align: left }
.r { text-align: right }
.j { text-align: justify }
.c { text-align: center; text-align: -o-center; text-align: -moz-center; text-align: -webkit-center; text-align: -khtml-center; *text-align: center; *zoom: 1; }
.a > * { width: 100% }


/* округление наполовину */
.rnd { border-radius: 50% }

/* скругление */
%for i in 1...5 {
	%if i === 1 { .ra, } .ra%{i} { border-radius: %{(ma+pa)/i}px }
}


/* padding-и и маргины */
.p { padding: 4pt }
.pa4 {padding: 4pt}
.m { margin: 4pt }
.m-lt { margin: 4pt 0pt 0pt 4pt }
.m-rb { margin: 0pt 4pt 4pt 0pt }
.ico {margin: 4pt}
.mr {margin-right: 4pt}
.ml {margin-left: 4pt}
.mt {margin-top: 4pt}
.mb {margin-bottom: 4pt}

/* линии на границе */
.hr { border: solid 1px #E7E7E7 }
.hr-h { border-left: solid 1px #E7E7E7; border-right: solid 1px #E7E7E7 }
.hr-v { border-top: solid 1px #E7E7E7; border-bottom: solid 1px #E7E7E7 }
.hr-l { border-left: solid 1px #E7E7E7 }
.hr-r { border-right: solid 1px #E7E7E7 }
.hr-b { border-bottom: solid 1px #E7E7E7 }
.hr-t { border-top: solid 1px #E7E7E7 }


/* типография */

code {
padding: 2px 4px;
font-size: 90%;
color: #c7254e;
background-color: #f9f2f4;
white-space: nowrap;
border-radius: 4px;
}


/* таблицы */
th {font-weight: 700}
.table-fill {width:100%}
.table-l th, .table-l td { text-align: left }
.table-j th, .table-j td { text-align: justify }
.table-r th, .table-r td { text-align: right }
.table-t th, .table-t td { vertical-align: top }
.table-b th, .table-b td { text-align: bottom }

.table, .table-border {border-collapse:collapse}
.table > tr, .table > * > tr { border-bottom: solid %{br}px %{ldim} }
.table tr:last-child { border-bottom: 0 }
.table-border, .table-border td, .table-border th { border: solid %{br}px %{dim} }
.table-zebra > tr:nth-of-type(odd), .table-zebra > * > tr:nth-of-type(odd) { background-color: white }

%for name, color of colors {
	%if name === 'dim-light' {.table-cursor > tr:hover, .table-cursor > * > tr:hover, }
	.table-cursor-%{name} > tr:hover, .table-cursor-%{name} > * > tr:hover { background-color: %{color} }
	
	.%{name}-line > tr > td, .%{name}-line > tr > th, %{name}-line > * > tr > td, .%{name}-line > * > tr > th { border: solid %{br}px %{color} }
}


/* кнопки - 2 */

%for name, color of dark {
	%r1 = CRoot.rgba(color)
	%r2 = CRoot.rgba(color)
	%r3 = CRoot.rgba(color)
	%l1 = r1.lightness() + 0.15; r1.lightness(l1 > 1? 1: l1)
	%l2 = r2.lightness() + 0.05; r2.lightness(l2 > 1? 1: l2)
	%l3 = r2.lightness() - 0.1; r3.lightness(l3 < 0? 0: l3)
	%if name === 'blue' { .btn, }.%{name}.btn {
		background-image: linear-gradient(to bottom, %{r1}, %{color});
		border-color: %{color};
	}
	%if name === 'blue' { .btn:hover, }.%{name}.btn:hover {
		background-image: linear-gradient(to bottom, %{r2}, %{r3});
	}
}




/* вкладки */

%color = ldim
.tabs {  }
.tabs a { border-style: solid; border-color: %{color}; border-width: 0 0 %{br}px 0; margin: 0; padding: %{ma+br+pa}px %{ma+br+pa}px %{ma+pa}px %{ma+br+pa}px; display: block; float:left; clear:none; text-decoration:none; border-radius: %{pa}px %{pa}px 0px 0px }
.tabs a:hover { background-color: %{color} }
.tabs .active:hover { background-color: transparent }
.tabs .active { border-width: %{br}px %{br}px 0 %{br}px; padding: %{ma+pa}px %{ma+pa}px %{ma+br+pa}px %{ma+pa}px; cursor:default; color: #555 }


/* меню */
.menu { padding: %{pa}px }
.menu > a { display:block; padding: %{pa/2}px %{pa}px; }
.menu > a:hover { background-color: %{lblue}; text-decoration:none; }

/* символы */
@font-face {
font-family: 'Glyphicons Halflings';
src: url('/css/fonts/glyphicons-halflings-regular.eot');
src: url('/css/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/css/fonts/glyphicons-halflings-regular.woff2') format('woff2'), url('/css/fonts/glyphicons-halflings-regular.woff') format('woff'), url('/css/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('/css/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');
}

%symbols = {'arrow-up': '\\e093'}
%for name, sym of symbols {
	.sym-%{name}:after { content: "%{sym}" }
}
%for name, sym of symbols {.sym-%{name},}.sym {%{inlineBlock};
margin-top: 5px;
margin-bottom: 10px;
font-size: 24px;
font-family: 'Glyphicons Halflings';
font-style: normal;
font-weight: 400;
line-height: 1;
-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;
}

/* загрузка файла */
.load-file { position:relative; }
.load-file:hover {  }
.load-file input { position: absolute; width: 100%; height: 100%; border:0 !important; padding:0!important; margin:0!important; opacity:0 }

/* тултип */
.c-tip, .tip { background-color: #2a2a2a; background-color: rgba(0, 0, 0, 0.7); color: WhiteSmoke; /*border: solid 1px gray;*/ padding: 5px; border-radius: 3px; font-size: 12px; width1: 400px; max-height: 200px; z-index: 1000; opacity: 0 }
.c-tip h1, .c-tip h2, .c-tip h3, .c-tip h4 { color: LightSkyBlue; clear:none }
.ico-close-red {float:right}

.tip { border-radius: 0 !important;  }

/* футер */
.orange_gradient {
color: Ivory;
font-weight: 900;
background: linear-gradient(to bottom,  rgba(254,191,1,1) 0%,rgba(254,191,1,0.6) 50%,rgba(254,191,1,1) 100%); /* W3C */
border-radius: 0 0 1em 1em;

}

.orange_gradient a {font-weight: normal}
