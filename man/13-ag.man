= Язык "Серебро" (Argentum)

== Инициализация фреймворка

[init]

	use common::sense;
	use lib "lib";
	use R::App qw/$app msg msg1/;
	
	$app->man->conf;
	
[test]


== Скаляры - строки и цифры

	$app->syntaxAg->new->eval("1");							# 1
	$app->syntaxAg->new->eval("1.1");						# 1.1
	$app->syntaxAg->new->eval("7_007_001_11_11");			# 70070011111
	$app->syntaxAg->new->eval("7_007_001_11_11.7_007");		# 70070011111.7007
	$app->syntaxAg->new->eval("-10");						# -10
	
	$app->syntaxAg->new->eval('"строка в utf8"');							# строка в utf8
	
Строки поддерживают интерполяцию:
	
	$app->syntaxAg->new->eval('utf8 = "utf8"; "строка в $utf8"');					# строка в utf8
	$app->syntaxAg->new->eval('hash = {key=>"utf8"}; "строка в $hash:key"');		# строка в utf8
	#$app->syntaxAg->new->eval('hash = {a=>6}; "строка в $a:6"');					# строка в utf8

== Классы и методы

=== Проект

Проект, это папка в которой лежит `Aquafile`.
Файлы с расширением `.ag` - классы на `Серебряне`.
Файлы с расширением `.au` - шаблоны.

Файлы в подпапках - это классы.

*/myproject*
* _ .Aqua
* _ Aquafile

	my $dir = $app->file("var/_test_13_ag")->rm->mkdir;
	my $file = $dir->sub("/Tess.ag");
	
	$app->syntaxAg->ag($file->path);		#@ ~ файл находится не в проекте.* создайте Aquafile
	
Создадим *Aquafile*:
	
	my $Aquafile = $dir->sub("/Aquafile")->write("");
	
	$app->syntaxAg->ag($file->path);		#@ ~ нет “Tess.ag”

Компиляция исходников происходит в поддиректорию `.Aqua`. Причём первым компилируется *Aquafile*.

	$app->file("var/_test_13_ag/.Aqua/Aquafile.pm")->exists;		# 1

Если файл не начинается на `class name`, где `name` - имя файла, то `class name` добавляется по умолчанию.

	$app->file("var/_test_13_ag/Tess.ag")->write("123");
	$app->syntaxAg->ag("var/_test_13_ag/Tess.ag");		# 123
	
	$app->file("var/_test_13_ag/Tess.ag")->write("class Tess \n 777 \n end");
	$app->syntaxAg->ag("var/_test_13_ag/Tess.ag");		# 777

Так же файл может начинаться на `extends` или `inherits`.
	
	$app->file("var/_test_13_ag/Tess.ag")->write("inherits Tour\n 911 \n end \n class Tour ");
	$app->syntaxAg->ag("var/_test_13_ag/Tess.ag");		# 911
	
Любой класс без `inherits` по умолчанию наследует `R::Object`.

Код который не входит в объявление какого-то метода будет входить в неявный метод `render`. При попытке создать такой метод будет сгенерирована ошибка.
Команда `ag` подгружает `Aquafile` и указанный класс, создаёт экземпляр и запускает метод `render`.

`Aquafilе` содержит конфигурацию проекта. Поэтому он назван *Акваторией*.

Классы подгружаются оператором `new`, если класс ещё не был загружен. При этом по путям `app.inc` ищется файл с расширением *.ag* или *.au* (именно в таком порядке).


=== Методы

Все переменные в *Серебрянке* - локальные.


== Конвееры
	
	
	
	
== Контролы - условия, циклы и исключения



== Операторы

	$app->syntaxAg->new->eval("b=a=10; a+b");						# 20


== ООП



== 