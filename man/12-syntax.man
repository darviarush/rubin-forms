= Язык шаблонизатора R::View

== Инициализация фреймворка

[init]

	use common::sense;
	use lib "lib";
	use R::App qw/$app msg msg1/;
	
	$app->man->conf;
	
	my $res;
	
[test]


== Синтаксический анализатор

Синтаксический анализатор 

	my $s = $app->syntax->new;
	
Вот так задаётся таблица операторов:
	
	$s->tr("yf", qw{ + - });
	$s->tr("xfy", qw{ * \ })->td("xf", qw{ * });
	$s->tr("xfy", qw{ + - });
	
* `tr` - строка таблицы, она увеличивает приоритет оператора.
* `td`- ячейка. Не увеличивает приоритет.

Скобки:

	$s->br(qw{ ( ) });

Терминалы:
	
	$s->x("var" => qr{ [a-z]\w* }xi);
	$s->x("num" => qr{ \d+|\d*\.\d+ }x);

Первым параметром выступает префикс.
	
Каждый оператор, скобка или операнд имеет отображение в указанный язык.
Создаём язык и добавляем в него отображения:
	
	
	$s->templates(
		"yf +" => "(0+{{ left }})",
		"yf +" => "(0+{{ left }})",
	);
	
	
	
	$s->eval("1 + -5");		# 
	
	